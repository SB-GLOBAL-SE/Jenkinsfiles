pipeline {

//agent { label "windows" } 
agent any
//environment {
   //TESTDATA = "placeholder"
//}
options { disableConcurrentBuilds() }
//tools { maven 'MVN' } 
stages {
   stage('Prep') {
      steps {
         cleanWs()  
      }
   }
   stage('Checkout') {
      steps {
       checkout scm  
      }
   }
   stage('APICall') {
   environment {
      TESTDATA = getTemp()
   }
      steps {
       //script {
           //env.TESTDATA =  getTemp()
       //}
       echo "TESTDATA: ${TESTDATA}"
         bat label: 'Retrieve Product from API', returnStdout: true, script: '"C:\\Program Files\\SmartBear\\ReadyAPI-2.7.0\\bin\\testrunner.bat" -sWebStoreTestSuite -cBareGetOrderRequest -r -a -j -f${WORKINGSPACE} "-RJUnit-Style HTML Report" -FXML "-EDefault environment" -GWORKINGSPACE="C:\\${WORKSPACE}\\${JOB_NAME}\\target\\test-reports" -tC:\\Users\\dermot.canniffe\\soapui-settings.xml "C:\\Users\\dermot.canniffe\\OneDrive - SmartBear Software, Inc\\ReadyAPI Projects\\Project-2-readyapi-project"'
      }
   }
   stage('TestComplete') {
    steps {
        echo "TESTDATA: ${env.TESTDATA}"
        // One or more steps need to be included within the steps block.
        testcompletetest generateMHT: true, launchType: 'lcKdt', project: 'TC_Demonstration', suite: 'C:\\Users\\dermot.canniffe\\OneDrive - SmartBear Software, Inc\\TestComplete 14 Projects\\LatestDemoProject\\DemoProject3.pjs', test: 'PurchaseWithBackendValidation', useTCService: true, userName: 'AD\\dermot.canniffe', userPassword: 'T49i77m282', commandLineArguments: '/ExportSummary:"${WORKSPACE}\\${JOB_NAME}\\target\\test-reports\\result_${BUILD_NUMBER}.xml" /exit' 
        }
    }
   stage('Results') {
      steps {
      junit '**/target/test-reports/result_${BUILD_NUMBER}.xml'
      archive 'target/*.jar'
   }
    }
}
}

@NonCPS
def getTemp() {
    curlProcess = [ 'bash', '-c', "curl wttr.in/Galway?format=%t" ].execute().text
    //process.waitFor()
    //println process.err.text
    //println process.text
    echo "CURLRESULT: ${curlProcess}"
    return curlProcess
}
